
#######################
#   Carpool Actions   #
#######################
/Carpool/<CarpoolID>

    Description Of Action:
        Fetches information about the desired carpool

    HTTP Method:
        GET

    URL Parameter:
        <CarpoolID>: A unique ID for a Carpool, returned from /Carpool/NewCarpool

    Required JSON Input:
        None

    Return:
        JSON with the Following Keys:
            'id': The Unique ID Of the Carpool
            'Title': The title of the Carpool
            'TimeCreated': The Date and Time it was Created
            'NumberCars': The number of cars currently registered with the carpool

/Carpool/NewCarpool

    Description of Action:
        Creates a New Carpool with the database

    HTTP Method:
        POST

    URL Parameter:
        None

    Required JSON Input:
        'CarpoolName': The desired name for the carpool

    Return:
        JSON with the following Key(s):
            'url': The id of the carpool that can be used to accesrs the carpool information in the future

/Carpool/<CarpoolID>/Cars

    Description of Action:
        Get information about all of the cars in a carpool

    HTTP Method:
            GET

    URL Parameter:
        CarpoolID: The unique ID of the Carpool desired

    Required JSON Input:
        None

    Return:
        JSON, with keys being the id of the cars, within that there is JSON with the following keys:
              'OwnerID': The Id of the owner of the car
              'CarCapacity': Capacity of the Car
              'TimeCreated': The Time the car was created
              'CarID': The ID of the Car
              'Passengers': A list of Passengers in the car


/Carpool/<CarpoolID>/AddCar/<PassengerID>

    Description of Action:
        Add a car to the database for a carpool

    HTTP Method:
        POST

    URL Parameter:
        <CarpoolID> : The unique ID for the desired carpool
        <PassengerID> : The ID of the passenger who owns the car


    Required JSON Input:
        JSON with the following keys:
        'car_capacity': integer of the number of passengers able to fit in the car

    Return:
        Json with the following Keys;
            'CarID': The id of the car created

/Carpool/<CarpoolID>/RemoveCar/<CarID>

    Description of Action:
        Remove a car from the carpool

    HTTP Method:
        Delete

    URL Parameter:
        <CarpoolID>: The ID of the desired Carpool
        <CarID> The id of the desired Car

    Required JSON Input:
        None

    Return:
        Message confirming deletion of car

/Carpool/<CarpoolID>/Passengers/CreatePassenger

    Description of Action:
        Create a new User/Passenger in the Carpool

    HTTP Method:
        POST

    URL Parameter:
        <CarpoolID>: The ID of the Carpool

    Required JSON Input:
        'passenger_name' : Name of the passenger

    Return:
        JSON with the following keys:
        'Message': A message confirming the completion of the request
        'PassengerID' The ID of the passenger desired


#######################
#     Car Actions     #
#######################

/Cars/<CarID>/Passengers

    Description of Action:
        Get the Passengers in a given car

    HTTP Method:
        GET

    URL Parameter:
        <CarID> The unique ID of the desired car

    Required JSON Input:
        None

    Return:
        JSON, with keys being the id of the cars, within that there is JSON with the following keys:
              'PassengerName': The name of the passenger
              'PassengerID': The ID of the Passenger
              'TimeCreated': The Time the car was created
              'CarID': The ID of the Car


/Cars/<CarID>/Passengers/AddPassenger/<PassengerID>/

    Description of Action:
        Add a passenger to the car

    HTTP Method:
        POST

    URL Parameter:
        <CarID> The ID Of the car
        <PassengerID> The id of the passenger

    Required JSON Input:
        None

    Return:
            Json with the key 'message' containing a confirmation of adding passenger to the car

/Cars/<CarID>/Passengers/DeletePassenger/<PassengerID>/

    Description of Action:
        Remove the Passenger from the Carpool

    HTTP Method:
        DELETE

    URL Parameter:
        <CarID>: ID of the Target Car
        <PassengerID> ID of the Target Passenger

    Required JSON Input:
        None

    Return:
        Json with the key 'message' containing a confirmation of removing the passenger from the car

/Cars/<CarID>

    Description of Action:
        Get information about the car

    HTTP Method:
        GET

    URL Parameter:
        <CarID> The target car
    Required JSON Input:
        None
    Return:
        "id": Id of the Car
        "CarCapacity": Capacity of the Car
        "TimeCreated": Time and date of creating the car
        "CarpoolID": The id of the carpool in question
        "Passengers": List of the passengers of the car

#######################
#  Passenger Actions  #
#######################

/Passengers/<PassengerID>

    Description of Action:
        Get information about a passenger

    HTTP Method:
        GET

    URL Parameter:
        <PassengerID> - Unique identifier of Passenger

    Required JSON Input:
        None

    Return:
         'id': Passengers ID
         'car_id': id of the car they ride in
         'driver': If the Passenger is a driver
         'TimeSelected': the time the car was selected
         'Name': The name of the passenger
/Passengers/<PassengerID>/RemovePassenger

    Description of Action:
        Removes a passenger from the database

    HTTP Method:
        DELETE

    URL Parameter:
        <PassengerID>

    Required JSON Input:
        None

    Return:
        JSON confirming the deletion

/Passengers/<PassengerID>/Modify

    Description of Action:
        MOdify a passenger in the system

    HTTP Method:
        PATCH

    URL Parameter:
        <PassengerID> The Passenger of interest

    Required JSON Input:
        Currently the only support is for the following JSON Tags:
        'driver' : true or false if the user is a driver
    Return: